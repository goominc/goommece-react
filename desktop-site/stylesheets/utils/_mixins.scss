// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

/// Responsive manager
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
/// @link http://sass-guidelin.es/#breakpoint-manager Sass Guidelines - Breakpoint Manager
@mixin respond-to($breakpoint) {
  $query: map-get($breakpoints, $breakpoint);
  
  @if not $query {
    @error 'No value found for `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.';
  }

  @media #{if(type-of($query) == 'string', unquote($query), inspect($query))} {
    @content;
  }
}

@mixin horizontal-divider ($margin) {
  display: block;
  width: 100%;
  height: 1px;
  background-color: #ddd;
  margin: $margin 0;
}
@mixin vertical-divider ($margin, $color) {
  display: block;
  width: 1px;
  height: 100%;
  background-color: $color;
  margin: 0 $margin;
}

// BEGIN https://css-tricks.com/snippets/css/css-triangle/
@mixin simple-arrow-up($size, $color) {
  width: 0;
  height: 0;
  border-left: $size solid transparent;
  border-right: $size solid transparent;

  border-bottom: $size solid $color;
}

@mixin simple-arrow-down($size, $color) {
  width: 0;
  height: 0;
  border-left: $size solid transparent;
  border-right: $size solid transparent;

  border-top: $size solid $color;
}

@mixin simple-arrow-right($size, $color) {
  width: 0;
  height: 0;
  border-top: $size solid transparent;
  border-bottom: $size solid transparent;

  border-left: $size solid $color;
}

@mixin simple-arrow-left($size, $color) {
  width: 0;
  height: 0;
  border-top: $size solid transparent;
  border-bottom: $size solid transparent;

  border-right: $size solid $color;
}
// END https://css-tricks.com/snippets/css/css-triangle/
@mixin body-and-arrow($body-width, $arrow-size, $color) {
  position: relative;
  display: inline-block;
  width: $body-width;
  height: $arrow-size * 2;
  background-color: $color;
  &:after {
    content: '';
    position: absolute;
    display: inline-block;
    top: 0;
    right: $arrow-size * - 1;
    @include simple-arrow-right($arrow-size, $color);
  }
}

@mixin button-default-styles() {
  color: #fff;
  background-color: #f8af23;
  background-image: -webkit-linear-gradient(top,#ffbc35,#f2a210);
  border: 1px solid #e87b0e;
  &:hover {
    opacity: 0.9;
  }
}
